/* https://github.com/huguesjohnson/narpassword/blob/main/LICENSE */

package com.huguesjohnson.narpas;

import java.io.Serializable;

public class PasswordSetting implements Serializable{
	private static final long serialVersionUID=666;
	private String passwordName;
	private boolean optionUseLCase;
	private boolean optionUseUCase;
	private boolean optionUseNumbers;
	private boolean optionUseSChars;
	private int	passwordLength;
	private String passwordNotes;
	private String category;
	private int version=1;
	private String[] limitSpecialChars=null;
	
	/* for the purposes of searching/sorting/comparing we only care about the name matching */

	@Override
	public int hashCode(){
		if(this.passwordName==null){return(0);}
		return(this.passwordName.hashCode());
	}

	@Override
	public boolean equals(Object obj){
		if(this==obj){return(true);};
		if(obj==null){return(false);};
		if(getClass()!=obj.getClass()){return(false);}
		PasswordSetting compareToObj=(PasswordSetting)obj;
		if((this.passwordName==null)||(compareToObj.passwordName==null)){return(false);}
		return(this.getPasswordName().equals(compareToObj.getPasswordName()));
	}
	
	/* autogenerated code below */
	
	@Override
	public String toString() {
		return passwordName;
	}

	public String getPasswordName() {
		return passwordName;
	}

	public void setPasswordName(String passwordName) {
		this.passwordName = passwordName;
	}
	public boolean isOptionUseLCase() {
		return optionUseLCase;
	}
	public void setOptionUseLCase(boolean optionUseLCase) {
		this.optionUseLCase = optionUseLCase;
	}
	public boolean isOptionUseUCase() {
		return optionUseUCase;
	}
	public void setOptionUseUCase(boolean optionUseUCase) {
		this.optionUseUCase = optionUseUCase;
	}
	public boolean isOptionUseNumbers() {
		return optionUseNumbers;
	}
	public void setOptionUseNumbers(boolean optionUseNumbers) {
		this.optionUseNumbers = optionUseNumbers;
	}
	public boolean isOptionUseSChars() {
		return optionUseSChars;
	}
	public void setOptionUseSChars(boolean optionUseSChars) {
		this.optionUseSChars = optionUseSChars;
	}
	public int getPasswordLength() {
		return passwordLength;
	}
	public void setPasswordLength(int passwordLength) {
		this.passwordLength = passwordLength;
	}
	public String getPasswordNotes() {
		return passwordNotes;
	}
	public void setPasswordNotes(String passwordNotes) {
		this.passwordNotes = passwordNotes;
	}

	public String getCategory() {
		return category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public int getVersion() {
		return version;
	}

	public void setVersion(int version) {
		this.version = version;
	}

	public String[] getLimitSpecialChars() {
		return limitSpecialChars;
	}

	public void setLimitSpecialChars(String[] limitSpecialChars) {
		this.limitSpecialChars = limitSpecialChars;
	}

	public PasswordSetting(String passwordName, boolean optionUseLCase, boolean optionUseUCase,
			boolean optionUseNumbers, boolean optionUseSChars, int passwordLength, String passwordNotes,
			String category, int version, String[] limitSpecialChars) {
		super();
		this.passwordName = passwordName;
		this.optionUseLCase = optionUseLCase;
		this.optionUseUCase = optionUseUCase;
		this.optionUseNumbers = optionUseNumbers;
		this.optionUseSChars = optionUseSChars;
		this.passwordLength = passwordLength;
		this.passwordNotes = passwordNotes;
		this.category = category;
		this.version = version;
		this.limitSpecialChars = limitSpecialChars;
	}

	public PasswordSetting(String passwordName, boolean optionUseLCase, boolean optionUseUCase,
			boolean optionUseNumbers, boolean optionUseSChars, int passwordLength, String passwordNotes) {
		super();
		this.passwordName = passwordName;
		this.optionUseLCase = optionUseLCase;
		this.optionUseUCase = optionUseUCase;
		this.optionUseNumbers = optionUseNumbers;
		this.optionUseSChars = optionUseSChars;
		this.passwordLength = passwordLength;
		this.passwordNotes = passwordNotes;
	}

	public PasswordSetting(String passwordName, boolean optionUseLCase, boolean optionUseUCase,
			boolean optionUseNumbers, boolean optionUseSChars, int passwordLength) {
		super();
		this.passwordName = passwordName;
		this.optionUseLCase = optionUseLCase;
		this.optionUseUCase = optionUseUCase;
		this.optionUseNumbers = optionUseNumbers;
		this.optionUseSChars = optionUseSChars;
		this.passwordLength = passwordLength;
	}
}
